{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/basepages.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","data","location","seo","title","frontmatter","description","image","publicURL","className","body","query"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,0GAMe,sBAA8B,IAAD,EAAlBS,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC5B,OACI,kBAAC,IAAD,CAAQC,IAAK,CACTC,MAAOH,EAAKf,IAAImB,YAAYD,MAC5BE,YAAaL,EAAKf,IAAImB,YAAYC,YAClCC,MAAK,UAAEN,EAAKf,IAAImB,YAAYE,aAAvB,aAAE,EAA4BC,WAEvCN,SAAUA,GACN,yBAAKO,UAAU,SACX,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,oCAAoCR,EAAKf,IAAImB,YAAYD,QAE3E,yBAAKK,UAAU,4CACX,kBAAC,cAAD,KACI,kBAAC,cAAD,KAAcR,EAAKf,IAAIwB,WASxC,IAAMC,EAAK","file":"component---src-templates-basepages-js-4b34827d66c1cad6a901.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nexport default function({ data, location }) {\n    return (\n        <Layout seo={{\n            title: data.mdx.frontmatter.title,\n            description: data.mdx.frontmatter.description,\n            image: data.mdx.frontmatter.image?.publicURL\n        }}\n        location={location}>\n            <div className=\"boxed\">\n                <div className=\"title py-12 text-center\">\n                    <h2 className=\"font-black text-5xl text-color-1\">{data.mdx.frontmatter.title}</h2>\n                </div>\n                <div className=\"post-content px-4 lg:px-24 md:px-8 pb-12\">\n                    <MDXProvider>\n                        <MDXRenderer>{data.mdx.body}</MDXRenderer>\n                    </MDXProvider>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\n\nexport const query = graphql`\n    query($slug: String!) {\n        mdx(fields: { slug: { eq: $slug } }) {\n            body\n            frontmatter {\n                title\n                image {\n                    publicURL\n                }\n                description\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}